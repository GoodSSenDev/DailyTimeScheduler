// <auto-generated />
using DailyTimeScheduler.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DailyTimeScheduler.DAL.Migrations
{
    [DbContext(typeof(DailyTimeSchedulerDbContext))]
    [Migration("20201224035349_SecondChange")]
    partial class SecondChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DailyTimeScheduler.Model.AppUser", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("No");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DailyTimeScheduler.Model.BoolScheduleRecord", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsTaskDone")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleNo")
                        .HasColumnType("int");

                    b.Property<long>("SetTimeUTC")
                        .HasColumnType("bigint");

                    b.Property<int>("TimeBlockNo")
                        .HasColumnType("int");

                    b.Property<int>("UserNo")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("ScheduleNo");

                    b.HasIndex("TimeBlockNo");

                    b.HasIndex("UserNo");

                    b.ToTable("BoolRecords");
                });

            modelBuilder.Entity("DailyTimeScheduler.Model.Schedule", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsScheduleEnd")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserNo")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("UserNo");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("DailyTimeScheduler.Model.TimeBlock", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("BlockSize")
                        .HasColumnType("bigint");

                    b.Property<long>("IntialUTCTime")
                        .HasColumnType("bigint");

                    b.Property<long>("RepeatPeriod")
                        .HasColumnType("bigint");

                    b.Property<int>("ScheduleNo")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("ScheduleNo");

                    b.ToTable("TimeBlocks");
                });

            modelBuilder.Entity("DailyTimeScheduler.Model.BoolScheduleRecord", b =>
                {
                    b.HasOne("DailyTimeScheduler.Model.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DailyTimeScheduler.Model.TimeBlock", "TimeBlock")
                        .WithMany()
                        .HasForeignKey("TimeBlockNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DailyTimeScheduler.Model.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Schedule");

                    b.Navigation("TimeBlock");
                });

            modelBuilder.Entity("DailyTimeScheduler.Model.Schedule", b =>
                {
                    b.HasOne("DailyTimeScheduler.Model.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("DailyTimeScheduler.Model.TimeBlock", b =>
                {
                    b.HasOne("DailyTimeScheduler.Model.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Schedule");
                });
#pragma warning restore 612, 618
        }
    }
}
